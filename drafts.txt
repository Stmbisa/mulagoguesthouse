import { NextResponse } from 'next/server'
import twilio from 'twilio'
import nodemailer from 'nodemailer'
import { BookingDetails } from '@/types'
import { rooms } from '@/data'
import { services } from '@/data'

const twilioClient = twilio(
  process.env.TWILIO_ACCOUNT_SID,
  process.env.TWILIO_AUTH_TOKEN
)

const emailTransporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: parseInt(process.env.SMTP_PORT || '587'),
  secure: false,
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASSWORD,
  },
})

export async function POST(request: Request) {
  try {
    const booking: BookingDetails = await request.json()
    const item = booking.type === 'room'
      ? rooms.find(r => r.id === booking.itemId)
      : services.find(s => s.id === booking.itemId)

    if (!item) {
      return NextResponse.json(
        { error: 'Invalid item ID' },
        { status: 400 }
      )
    }

    // Create detailed message
    const messageContent = `
New Booking at Mulago Guest House!

Type: ${booking.type.toUpperCase()}
Item: ${item.name}
Price: ${typeof item.price === 'number' ? `$${item.price}` : item.price}

Customer Details:
- Name: ${booking.customerName}
- Email: ${booking.email}
- Phone: ${booking.phone}
${booking.type === 'room' ? `
- Check-in: ${booking.checkIn}
- Check-out: ${booking.checkOut}
- Guests: ${booking.numberOfGuests}` : ''}
${booking.specialRequests ? `
Special Requests: ${booking.specialRequests}` : ''}

Please contact the customer to confirm the booking.
    `.trim()

    // Send WhatsApp notifications
    const whatsappNumbers = process.env.NOTIFICATION_WHATSAPP_NUMBERS?.split(',') || []
    await Promise.all(
      whatsappNumbers.map(number =>
        twilioClient.messages.create({
          body: messageContent,
          from: process.env.TWILIO_WHATSAPP_FROM,
          to: number.trim()
        })
      )
    )

    // Send email notifications
    const emailRecipients = process.env.NOTIFICATION_EMAIL_RECIPIENTS?.split(',').map(email =>
      email.replace('email:', '').trim()
    ) || []

    const emailTransporter = nodemailer.createTransport({
      host: process.env.MAIL_SERVER,
      port: parseInt(process.env.MAIL_PORT || '587'),
      secure: false,
      auth: {
        user: process.env.MAIL_USERNAME,
        pass: process.env.MAIL_PASSWORD,
      },
    })

    await Promise.all(
      emailRecipients.map(email =>
        emailTransporter.sendMail({
          from: process.env.MAIL_FROM,
          to: email,
          subject: `New Booking: ${item.name} - Mulago Guest House`,
          text: messageContent,
          html: createEmailHTML(booking, item),
        })
      )
    )

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error('Booking error:', error)
    return NextResponse.json(
      { error: 'Failed to process booking' },
      { status: 500 }
    )
  }
}

function createEmailHTML(booking: BookingDetails, item: any): string {
  return `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <h2 style="color: #22c55e;">New Booking at Mulago Guest House</h2>

      <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
        <h3 style="margin-top: 0;">Booking Details</h3>
        <p><strong>Type:</strong> ${booking.type.toUpperCase()}</p>
        <p><strong>Item:</strong> ${item.name}</p>
        <p><strong>Price:</strong> ${typeof item.price === 'number' ? `$${item.price}` : item.price}</p>
      </div>

      <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
        <h3 style="margin-top: 0;">Customer Details</h3>
        <p><strong>Name:</strong> ${booking.customerName}</p>
        <p><strong>Email:</strong> ${booking.email}</p>
        <p><strong>Phone:</strong> ${booking.phone}</p>
        ${booking.type === 'room' ? `
        <p><strong>Check-in:</strong> ${booking.checkIn}</p>
        <p><strong>Check-out:</strong> ${booking.checkOut}</p>
        <p><strong>Guests:</strong> ${booking.numberOfGuests}</p>
        ` : ''}
        ${booking.specialRequests ? `
        <p><strong>Special Requests:</strong> ${booking.specialRequests}</p>
        ` : ''}
      </div>

      <p style="color: #6b7280; font-size: 14px;">Please contact the customer to confirm the booking.</p>
    </div>
  `
}